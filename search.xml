<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[Github+hexo 搭建属于自己的一个博客]]></title>
    <url>%2F2019%2F01%2F28%2Fgithub-hexo-da-jian-shu-yu-zi-ji-de-yi-ge-bo-ke%2F</url>
    <content type="text"><![CDATA[技术小白搭建个人博客&emsp;—— hexo+github 前言为什么要搭建一个自己的博客呢？ 因为是个技术小白，然后经常在网上浏览各种技术博客，总面临一个问题。那就是每次看过之后就忘了，回过头来感觉还是没学到什么，就像做无用功一样。俗话说好记性不如烂笔头，于是决定了。作为一个程序猿，当然也得有一个记录自己学习工作的一个博客咯！于是谷歌一下，看了一会儿，于是决定采用 Github+hexo 搭建一个属于自己的博客。 这里说一下为什么选择 Github+hexo 搭建的几点原因： 1 当然是因为穷啦，Github免费的 2 快速搭建，全程走下来只要差不多一个小时就可以搭建成功了 3 全静态，支持MarkDown,静态博客最大的优势就是没有数据库，可以很方便的迁移，也不用担心安全问题 开始搭建1 软件安装配置搭建博客，首先需要安装环境，这里需要两个软件：Git和Nodejs。 Git安装 网址：https://git-scm.com/download/win Node.js安装 网址：https://nodejs.org/en/download/ 安装完成之后，要确认自己是否安装成功，打开cmd运行下面的命令，有返回信息就是成功的了。 git –versionnode -vnpm -v 2 安装hexo我个人习惯把相关的软件安装在一起，所以新建一个文件夹用来安装hexo,新建一个文件夹 hexo博客 然后打开这个文件夹，刚刚安装成功了git,在空白地方点击右键，选择 Git bash here 利用npm命令安装hexo npm install hexo-cli -g 安装完成之后，关掉Git Bash 窗口，然后在hexo博客 文件夹下面新建一个文件夹，这个文件夹就是放hexo跟你以后写的博客的文件夹，名字随便你自己取，我的叫username.github.io 进入刚刚你新建的这个文件夹，同样里面什么都没有，然后右键空白地方，选择 Git bash here ，执行安装hexo的命令。 hexo init 安装依赖包 npm install git部署安装 npm install hexo-deployer-git –save 到了这里，该安装的已经安装好了，接下来就看看成果吧。 hexo ghexo s 到浏览器输入 localhost:4000就可以看到页面内容了。这个时候看到的是一篇默认的博客：Hello World。 3 把博客部署到Github Pages上去 完成了上面的工作，我们已经可以写自己的博客了，但是呢，博客只能在自己的本地看得到，别人无法在网上查看你的博客。接下来我们就要结合Github page的功能让别人也能看到你的博客。 如果你没有github的话，首先需要注册一个github，访问github，点击右上角的注册。uername 最好都用小写，因为最后建立的博客地址是：http://username.github.io 邮箱十分重要，GitHub 上很多通知都是发送到你的邮箱的。 创建Repository代码仓库Repository 名字应该是username.github.io。username 就是 你注册时候的 username。点击creat repository 仓库建好了，接下来就需要把本地的代码放到这个仓库里面。 首先检查自己的电脑上面有没有SSH Key,打开cmd输入下面命令: cd ~/. ssh 如果返回“No such file or directory”，说明你的电脑上面没有SSH Key。 生成新的SSH Key 第一步、创建一对新的SSH密钥(keys) ssh-keygen -t rsa -C “邮件地址@youremail.com” 输入回车之后系统会要你输入密码： Enter passphrase (empty for no passphrase):&lt;设置密码&gt;Enter same passphrase again:&lt;再次输入密码&gt; 【提示】输入密码的时候，密码是看不见的，不要慌！ 输入完成后会出现： Your identification has been saved in /c/Users/you/.ssh/id_rsa.Your public key has been saved in /c/Users/you/.ssh/id_rsa.pub.The key fingerprint is:01:0f:f4:3b:ca:85:d6:17:a1:7d:f0:68:9d:f0:a2:db your_email@example.com 第二步、在GitHub中添加你的公钥 运行如下命令，将公钥的内容复制到系统粘贴板(clipboard)中。 clip &lt; ~/.ssh/id_rsa.pub 接下来： 1.登陆GitHub,进入你的Account Settings。 2.选择SSH Keys 3.粘贴密钥，添加即可 添加好之后我们还需要测试一下添加的东西有没有效果。 进入hexo博客这个文件夹，右键空白，然后选择Git bash here，输入下面的命令： ssh -T git@github.com 返回： The authenticity of host ‘GitHub.com (207.97.227.239)’ can’t be established.RSA key fingerprint is 16:27:ac:a5:76:28:2d:36:63:1b:56:4d:eb:df:a6:48.Are you sure you want to continue connecting (yes/no) 输入 yes 之后证明添加的东西已经起了效果，接下来我们还需要设置一点东西： $ git config –global user.name “wuyalan”//输入注册时的username$ git config –global user.email “alan.wyl@foxmail.com“//填写注册邮箱 git会根据用户的名字和邮箱来记录提交。GitHub也是用这些信息来做权限的处理，输入下面的代码进行个人信息的设置，把名称和邮箱替换成你自己的，名字根据自己的喜好自己取，而不是GitHub的昵称。 第三步、将本地的Hexo文件更新到Github的库中 上面我们已经把本机跟github的连接通道打通了，现在就是把本地的东西放到我们建的仓库里面去。 1.登录Github打开自己的项目 username.github.io 2.第二步、打开之后，点击SSH，选择SSH类型地址 3.第三步、复制地址 4.第四步、打开一开始创建的hexo博客文件夹，用记事本打开刚文件夹下的_config.yml文件 5.第五步、在配置文件里作如下修改，保存 deploy:&emsp;&emsp;type: git&emsp;&emsp;repository: git@github.com:username/username.github.io.git&emsp;&emsp;branch: master 6.第六步、在Hexo文件夹下Git bash here界面执行： hexo ghexo d 执行完之后会让你输入github的密码，输入完后就可以把自己的代码上传到GitHub上面了。如果报错： ERROR Deployer not found: git，那么就是你的deployer没有安装成功，你需要执行如下命令再安装一次： npm install hexo-deployer-git –save 一切正常之后就可以打开浏览器，输入 username.github.io查看了，这个username就是前面建好的那个。如果得到你想要的效果，那么恭喜你，博客已经搭建好啦！每一个人都可以通过这个地址访问到你的博客了。 接下来你就可以随心所欲的写各种属于自己的博客啦，是不是很酷啊。全程走下来大概花费时间在一个小时左右。当然了，搭建不费什么事情，就是有很多坑注意避免一下就行了，具体原因可以谷歌解决哈~！ 结语搭建了属于自己的博客，还是有一定的成就感的。也把自己搭建的过程写出来了，当然第一次写博客还有很多地方不足，虽然内容不是很多，但是写的时间也很长。其实博客远不止于此，会搭建之后你还得会写，使用 MarkDown 进行编写，我推荐使用Markdown Pad2，我也是使用的这款软件。博客的样子还很丑，以后有时间再来慢慢美化。以后的路还很长，所以要认真写博客，记录自己的成长。 如果有什么问题的话，可以通过我博客的联系方式联系我，也欢迎大家一起交流，一起学习进步。 以下一些工具及学习连接： Markdown Pad2：https://pan.baidu.com/s/1JR_0OCoaM98IlAK67KocUw &emsp;提取码：xqao Markdown——入门指南 使用next主题配置博客基本信息 hexo的next主题个性化配置教程 让你的Hexo博客华丽升级]]></content>
      <categories>
        <category>hexo</category>
      </categories>
      <tags>
        <tag>hexo</tag>
      </tags>
  </entry>
</search>
